dist: trusty
sudo: required
language: bash
before_install:
- curl https://raw.githubusercontent.com/express42/otus-homeworks/2018-05/run.sh |
  bash

sudo: required
dist: trusty
language: python
python: "2.7"

env:
  global:
  - PATH="${HOME}/bin
  - TMPDIR="${TMPDIR:-/tmp}"
  - TF_VERSION="0.11.7"
  - PACKER_VERSION=""1.2.5

before_install:
    - if ! terraform version ; then
      mkdir -p "${HOME}/bin"
      pushd "${TMPDIR}" ;
      curl -sSL
        -o terraform.zip
        "https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip" ;
      unzip terraform.zip ;
      mv -v terraform "${HOME}/bin/terraform" ;
      chmod +x "${HOME}/bin/terraform" ;
      popd ;
    fi

    - if ! terraform version ; then
      mkdir -p "${HOME}/bin"
      pushd "${TMPDIR}" ;
      curl -sSL
        -o terraform.zip
        "https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip" ;
      unzip packer.zip ;
      mv -v packer "${HOME}/bin/packer" ;
      chmod +x "${HOME}/bin/packer" ;
      popd ;
    fi
install:
  - sudo pip install -r ansible/requirements.txt

script:
  - ansible --version
  - ansible-lint --version
  - terraform version
  - packer version
  - echo $HOME ; pwd
  - cd $HOME/overmind88-infra/terraform ; find . -type f -name '*.tf' -exec terraform fmt {} \;
  - cd $HOME/overmind88-infra/packer ; find . -type f -name '*.json' -exec packer validate -var-file=variables.json.example {} \;
  - cd $HOME/overmind88-infra/ansible ; find . -type f -name '*.yml' -exec ansible-lint {} \;
  - touch ../../vault.key; ansible-playbook playbooks/site.yml --syntax-check


notifications:
  slack:
    rooms:
      secure: B/+iSLvV1uGdexzAzoaZhEHLAxa9k0Py2cphKUFLQLBEK+XF2IIMXWhRkB+cDkHlYrzglLLyyc9L9HAmFlQRmlTQhFCZpPNKw0r6q50eDsU9QXyBTc6hQq+T8LxGdBDOrnSV3zypGI5v/JiURADZ8dr8XeF9UXMpZSNzywdxGhH+CGlloaRsl/MKbNZtSskq0YlT8PsA0esAoU8LBqDmqaqy2/JFs4HB1QjBaKr4NRo/Mt1cNNC+vAyYLrs97wBH/3W79pHHxAkw9Op4oI69Zj4jdimiiv5Gs23vgXVmTwm3e2c3OaxTIdGoLehtCLiUhusCpKbD8UzNkPy1+AhwpxHKI/jGOygk0PwQF1us2T2I0ttKCzIBt/dIl6QnDh2LVH2Nwgz7SmSAlRIOqmTqBTt8BjtRsuhHyeBwLB6aWQTIuhD81SMBM2Ca1i78yt5f+1MMhS/m7bL8LQ6F7mciHeN5L+MepUwRItH7W4cXOsf3gYt4VgMrmtzzh5T4AMBJtAmAPGruVR/bYb5ccPYHAoXQHxKWM8L2J0tX06w0bGpmfeAY3eFfXGgr1klqjXmLYp6UJZP2mbjF1ufhAW8cF440FD3J0GniDixibBaWU51oDQ9rWHizCjT97xLPa2IIEytB3k+QikfTDVRri2wN0EDgY6QT6JIozXTRzTtyF7Q=
